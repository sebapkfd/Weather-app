{"version":3,"sources":["components/Title.js","components/Input.js","services/placeFormat.js","components/Info.js","components/Footer.js","services/dateFormat.js","services/getData.js","App.js","index.js"],"names":["Title","className","Input","handleSubmit","handleType","tempType","onSubmit","e","preventDefault","target","location","value","submitLocation","type","name","placeholder","required","onClick","placeFormat","city","country","length","acronym","replace","match","join","toUpperCase","Info","weather","opt","temp","tempC","tempF","feelsLike","feelsLikeC","feelsLikeF","place","currentDate","src","icon","alt","id","condition","humidity","wind","Footer","href","rel","dateFormat","dateStr","aux","split","getData","a","fetch","mode","response","json","data","infoTime","localtime","current","temp_c","temp_f","text","wind_kph","feelslike_c","feelslike_f","currentTime","App","useState","report","setReport","setTempType","getWeather","newReport","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAQeA,EARD,WACV,OACI,qBAAKC,UAAU,QAAf,SACI,4CCuBGC,EAxBD,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAOvC,OACI,sBAAKJ,UAAU,iBAAf,UACI,sBAAMK,SAAU,SAACC,GAAD,OAPD,SAACA,GACpBA,EAAEC,iBACFL,EAAaI,EAAEE,OAAOC,SAASC,OAKJC,CAAeL,IAAtC,SACI,uBACIM,KAAK,OACLC,KAAK,WACLC,YAAY,SACZC,UAAQ,MAGhB,wBAAQC,QAAS,kBAAMb,KAAvB,SACKC,QCTFa,EAXK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzB,GAAIA,EAAQC,QAAU,GAAI,CACtB,IACIC,EADUF,EAAQG,QAAQ,OAAQ,KAAKC,MAAM,WAC3BC,KAAK,IAAIC,cAC/B,OACI,+BAAKP,EAAL,MAAcG,KAGtB,OAAO,+BAAKH,EAAL,MAAcC,MCiCVO,EAtCF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACjBC,EAAgB,MAARD,EAAeD,EAAQG,MAAQH,EAAQI,MAC/CC,EAAqB,MAARJ,EAAeD,EAAQM,WAAaN,EAAQO,WAE7D,GAAGP,EAAQT,KAAM,CACb,IAAMiB,EAAQlB,EAAYU,GAC1B,OACI,sBAAK3B,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAf,SACKmC,IAEL,qBAAKnC,UAAU,OAAf,SACI,6BAAK2B,EAAQS,mBAGrB,sBAAKpC,UAAU,sBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKqC,IAAKV,EAAQW,KAAMC,IAAI,WAEhC,sBAAKvC,UAAU,iBAAf,UACI,oBAAIwC,GAAG,OAAP,SAAeX,IACf,6BAAKF,EAAQc,kBAGrB,sBAAKzC,UAAU,gBAAf,UACI,4CAAe2B,EAAQe,YACvB,wCAAWf,EAAQgB,WAEvB,qBAAK3C,UAAU,aAAf,SACI,8CAAiBgC,UAKjC,OAAO,MC5BIY,EAVA,WACX,OACI,iCACI,mBAAGC,KAAK,0CAA0CrC,OAAO,SAASsC,IAAI,aAAtE,SACI,qBAAKT,IAAI,oEAAoEE,IAAI,SAASC,GAAG,cCC9FO,EALI,SAACC,GAChB,IAAIC,EAAMD,EAAQE,MAAM,OACxB,MAAO,CAACD,EAAI,GAAGA,EAAI,GAAGA,EAAI,IAAKzB,KAAK,MC4BzB2B,EA5BF,uCAAG,WAAO1C,GAAP,qBAAA2C,EAAA,+EAEeC,MAAM,oFAAD,OAC4D5C,GACpF,CAAC6C,KAAM,SAJH,cAEFC,EAFE,gBAKWA,EAASC,OALpB,cAKFC,EALE,OAMFC,EAAWD,EAAKhD,SAASkD,UAAUT,MAAM,KACzCvB,EAAU,CACZG,MAAM,GAAD,OAAK2B,EAAKG,QAAQC,OAAlB,UACL9B,MAAM,GAAD,OAAK0B,EAAKG,QAAQE,OAAlB,UACLrB,UAAWgB,EAAKG,QAAQnB,UAAUsB,KAClCrB,SAAS,GAAD,OAAKe,EAAKG,QAAQlB,SAAlB,KACRC,KAAK,GAAD,OAAKc,EAAKG,QAAQI,SAAlB,SACJ7C,QAASsC,EAAKhD,SAASU,QACvBD,KAAMuC,EAAKhD,SAASI,KACpBoB,WAAW,GAAD,OAAKwB,EAAKG,QAAQK,YAAlB,UACV/B,WAAW,GAAD,OAAKuB,EAAKG,QAAQM,YAAlB,UACV5B,KAAK,SAAD,OAAWmB,EAAKG,QAAQnB,UAAUH,MACtCF,YAAaW,EAAWW,EAAS,IACjCS,YAAaT,EAAS,IAnBlB,kBAqBD/B,GArBC,2HAAH,sD,MC2BEyC,MArBf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEmBF,mBAAS,KAF5B,mBAENjE,EAFM,KAEIoE,EAFJ,KAMPC,EAAU,uCAAG,WAAOnE,GAAP,eAAA8C,EAAA,sEACKD,EAAQ7C,GADb,OACboE,EADa,OAEjBH,EAAUG,GAFO,2CAAH,sDAKhB,OACE,sBAAK1E,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOE,aAAc,SAACI,GAAD,OAAMmE,EAAWnE,IAAIH,WAAY,kBAVRqE,EAAP,MAAbpE,EAAgC,IAAoB,MAUAA,SAAUA,IACxF,cAAC,EAAD,CAAMuB,QAAS2C,EAAQ1C,IAAKxB,IAC5B,cAAC,EAAD,QCpBNuE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78bfe20d.chunk.js","sourcesContent":["const Title = () => {\r\n    return (\r\n        <div className=\"title\">\r\n            <h1>Weather</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst Input = ({ handleSubmit, handleType, tempType }) => {\r\n\r\n    const submitLocation = (e) => {\r\n        e.preventDefault();\r\n        handleSubmit(e.target.location.value);\r\n    }\r\n\r\n    return (\r\n        <div className='search-options'>\r\n            <form onSubmit={(e) => submitLocation(e)}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"location\"\r\n                    placeholder=\"Search\"\r\n                    required\r\n                />\r\n            </form>\r\n            <button onClick={() => handleType()}>\r\n                {tempType}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","const placeFormat = ({ city, country }) => {\r\n    if (country.length >= 14) {\r\n        let matches = country.replace(' of ', ' ').match(/\\b(\\w)/g);\r\n        let acronym = matches.join('').toUpperCase();\r\n        return (\r\n            <h3>{city} - {acronym}</h3>\r\n        )\r\n    }\r\n    return <h3>{city} - {country}</h3>\r\n}\r\n\r\nexport default placeFormat;","import React from 'react';\r\nimport placeFormat from '../services/placeFormat';\r\n\r\nconst Info = ({ weather, opt }) => {\r\n    let temp = (opt === 'C') ? weather.tempC : weather.tempF;\r\n    let feelsLike = (opt === 'C') ? weather.feelsLikeC : weather.feelsLikeF;\r\n\r\n    if(weather.city) {\r\n        const place = placeFormat(weather);\r\n        return (\r\n            <div className=\"info\">\r\n                <div className=\"place-date\">\r\n                    <div className=\"place\">\r\n                        {place}\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        <h3>{weather.currentDate}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"icon-temp-condition\">\r\n                    <div className=\"icon-container\">\r\n                        <img src={weather.icon} alt=\"icon\"/>\r\n                    </div>\r\n                    <div className=\"temp-condition\">\r\n                        <h2 id=\"temp\">{temp}</h2>\r\n                        <h3>{weather.condition}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"humidity-wind\">\r\n                    <h3>Humidity: {weather.humidity}</h3>\r\n                    <h3>Wind: {weather.wind}</h3>\r\n                </div>\r\n                <div className=\"feels-like\">\r\n                    <h3>Feels like: {feelsLike}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport default Info;","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <a href=\"https://github.com/sebapkfd/Weather-app\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img src=\"https://img.icons8.com/fluent-systems-filled/24/ffffff/github.png\" alt=\"Github\" id=\"repo\"/>\r\n            </a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","const dateFormat = (dateStr) => {\r\n    let aux = dateStr.split(/\\D/g);\r\n    return [aux[2],aux[1],aux[0] ].join(\"-\");\r\n}\r\n\r\nexport default dateFormat;","import dateFormat from './dateFormat';\r\n\r\nconst getData = async (location) => {\r\n    try {\r\n        const response = await fetch(\r\n            `https://api.weatherapi.com/v1/current.json?key=a5f5d927bbc64246a51205628200112&q=${location}`, \r\n            {mode: 'cors'})\r\n        const data = await response.json();\r\n        const infoTime = data.location.localtime.split(' ');\r\n        const weather = {\r\n            tempC: `${data.current.temp_c}째 C`,\r\n            tempF: `${data.current.temp_f}째 F`,\r\n            condition: data.current.condition.text,\r\n            humidity: `${data.current.humidity}%`,\r\n            wind: `${data.current.wind_kph} Km/h`,\r\n            country: data.location.country,\r\n            city: data.location.name,\r\n            feelsLikeC: `${data.current.feelslike_c}째 C`,\r\n            feelsLikeF: `${data.current.feelslike_f}째 F`,\r\n            icon: `https:${data.current.condition.icon}`,\r\n            currentDate: dateFormat(infoTime[0]),\r\n            currentTime: infoTime[1]\r\n        };\r\n        return weather;\r\n    }\r\n    catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport default getData;","import React, {useState} from 'react';\r\nimport Title from './components/Title';\r\nimport Input from './components/Input';\r\nimport Info from './components/Info';\r\nimport Footer from './components/Footer';\r\nimport getData from './services/getData';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [report, setReport] = useState({});\r\n  const [tempType, setTempType] = useState('C');\r\n\r\n  const changeTempType = () => (tempType === 'C') ? setTempType('F') : setTempType ('C');\r\n\r\n  const getWeather = async (e) => {\r\n    let newReport = await getData(e);\r\n    setReport(newReport);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title/>\r\n      <Input handleSubmit={(e) =>getWeather(e)} handleType={() => changeTempType()} tempType={tempType}/>\r\n      <Info weather={report} opt={tempType}/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}